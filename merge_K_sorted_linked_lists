#include<stdio.h>
#include<malloc.h>
struct ListNode{
    int val;
    struct ListNode *next;
};
void merge(struct ListNode** lists,int l,int r){
    
    struct ListNode *h1=lists[l],*h2=lists[r],*temp=NULL,*last=NULL,*newn=NULL;
    // if(h1==NULL)return h2;
    
    while(h1 && h2){
        if(h1->val>h2->val){
            newn=(struct ListNode *)malloc(sizeof(struct ListNode));
            newn->val=h2->val;
            newn->next=NULL;
            h2=h2->next;
        }
        else{
            newn=(struct ListNode *)malloc(sizeof(struct ListNode));
            newn->val=h1->val;
            newn->next=NULL; 
            h1=h1->next;
        }
        if(temp==NULL){
            temp=newn;
        }
        else
            last->next=newn;
        last=newn;
    }
    while(h1){
        newn=(struct ListNode *)malloc(sizeof(struct ListNode));
        newn->val=h1->val;
        newn->next=NULL;
        if(temp==NULL)temp=newn;
        else last->next=newn;
        last=newn;
        h1=h1->next;
    }
    while(h2){
        newn=(struct ListNode *)malloc(sizeof(struct ListNode));
        newn->val=h2->val;
        newn->next=NULL;
        if(temp==NULL)temp=newn;
        else last->next=newn;
        last=newn;
        h2=h2->next;
    }
    lists[l]=temp;
}
void mergeSort(struct ListNode** lists,int l,int r ){
    int mid;
    if(l<r){
        mid=(l+r)/2;
        mergeSort(lists,l,mid);
        mergeSort(lists,mid+1,r);
        merge(lists,l,mid+1);
    }
}
struct ListNode* mergeKLists(struct ListNode** lists, int n){
if(n==0)return NULL;
if(n==1)return lists[0];
mergeSort(lists,0,n-1);
return lists[0];
}
struct ListNode* createNode (int n){
    struct ListNode *temp;
    temp=(struct ListNode*)malloc(sizeof(struct ListNode));
    temp->val=n;
    temp->next=NULL;
    return temp;
}
struct ListNode* createList(int n){
    struct ListNode *head=NULL,*newn,*last;
    int val;
    for(int i=0;i<n;i++){
        printf("enter data");
        scanf("%d",&val);
        newn=createNode(val);
        if(head==NULL){
            head=newn;
        }
        else last->next=newn;
        last=newn;
    }
    return head;
}
int main(){
    struct ListNode** lists;
    printf("enter no of lists");
    int n,m;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        printf("enter no of elements in this list");
        scanf("%d",&m);
        lists[i]=createList(m);
    }
    struct ListNode* a=mergeKLists(lists,n);
    while(a){
        printf("%d ",a->val);
        a=a->next;
    }
}
output:
enter no of lists 3
enter no of elements in this list 3
enter data 1
enter data 4
enter data 5
enter no of elements in this list 3
enter data 1
enter data 3
enter data 4
enter no of elements in this list 2
enter data 2
enter data 6
1 1 2 3 4 4 5 6
